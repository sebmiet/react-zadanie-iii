{"version":3,"sources":["components/Quote.js","components/Ui.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","quote","author","className","Ui","handleDrawButton","handleLastQuote","onClick","App","useState","data","setData","loading","setLoading","error","setError","sentence","setSentence","history","setHistory","useEffect","fetch","then","response","ok","json","Math","floor","random","length","catch","console","finally","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAWeA,EATD,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OACnB,OACI,sBAAKC,UAAU,QAAf,UACE,mCAAMF,EAAN,OACA,6BAAKC,QCKAE,EATJ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,iBAAkBC,EAAsB,EAAtBA,gBAC9B,OACE,sBAAKH,UAAU,UAAf,UACE,wBAAQI,QAASF,EAAkBF,UAAU,cAA7C,2BACA,wBAAQI,QAASD,EAAiBH,UAAU,eAA5C,8BC4DSK,G,MAtDH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCN,mBAAS,MAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA8BR,mBAAS,MAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KA2BA,GAvBAC,qBAAU,WACRC,MAHc,yIAIbC,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACV,OAAOD,EAASE,OAElB,MAAMF,KAEPD,MAAK,SAAAZ,GACJC,EAAQD,GACRO,EAAYP,EAAKgB,KAAKC,MAAMD,KAAKE,SAAWlB,EAAKmB,aAElDC,OAAM,SAAAhB,GACLiB,QAAQjB,MAAM,yBAA0BA,GACxCC,EAASD,MAEVkB,SAAQ,WACPnB,GAAW,QAGZ,IAGAD,EAAS,MAAO,aACnB,GAAGE,EAAO,MAAO,SAajB,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAOF,MAAOe,EAASf,MAAOC,OAAQc,EAASd,SAC/C,cAAC,EAAD,CAAIG,iBAdiB,WACvBc,EAAWH,GACXC,EAAYP,EAAKgB,KAAKC,MAAMD,KAAKE,SAAWlB,EAAKmB,WAYPvB,gBATpB,WAClBY,GACJD,EAAYC,WC1CDe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,K","file":"static/js/main.fd98c775.chunk.js","sourcesContent":["import React from 'react'\n\nconst Quote = ({quote, author}) => {\n    return (\n        <div className=\"quote\">\n          <h2>\"{quote}\"</h2>\n          <h3>{author}</h3>\n        </div>\n    )\n}\n\nexport default Quote\n","import React from \"react\";\n\nconst Ui = ({ handleDrawButton, handleLastQuote }) => {\n  return (\n    <div className=\"buttons\">\n      <button onClick={handleDrawButton} className=\"button-left\">Nowy cytat...</button>\n      <button onClick={handleLastQuote} className=\"button-right\">Poprzedni...</button>\n    </div>\n  );\n};\n\nexport default Ui;\n","//states\nimport React, {useState, useEffect} from 'react';\n\n//components \nimport Quote from './components/Quote'; \nimport Ui from './components/Ui'; \n\n//css\nimport './App.css';\n\n\n\nconst App = () => {\n  const [data, setData] = useState([]); //data comes from json\n  const [loading, setLoading] = useState(true); \n  const [error, setError] = useState(null);\n  const [sentence, setSentence] = useState(null);\n  const [history, setHistory] = useState(null);\n  \n  const API_URL = \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\";\n\n  useEffect(() => {\n    fetch(API_URL)\n    .then(response => {\n      if(response.ok){\n        return response.json()\n      }\n      throw response;\n    })\n    .then(data => {\n      setData(data);\n      setSentence(data[Math.floor(Math.random() * data.length)])\n    })\n    .catch(error => {\n      console.error(\"Error fetching data : \", error);\n      setError(error);\n    })\n    .finally(()=>{\n      setLoading(false);\n      \n    })\n  }, []);\n  ;\n  \n  if(loading) return \"Loading...\";\n  if(error) return \"Error!\";\n\n  const handleDrawButton = () => {\n    setHistory(sentence);\n    setSentence(data[Math.floor(Math.random() * data.length)])\n  }\n\n  const handleLastQuote = () => {\n    if(!history) return;\n    setSentence(history);\n  }\n  \n  \n  return (\n    <div className=\"App\">  \n      <Quote quote={sentence.quote} author={sentence.author}/>\n      <Ui handleDrawButton={handleDrawButton} handleLastQuote={handleLastQuote}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}